<Page x:Class="Leitner_System_Transfered_2.View.Settings"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Leitner_System_Transfered_2.View"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Settings">

    <Page.CommandBindings>
        <CommandBinding x:Name="Copy" Command="ApplicationCommands.Copy" CanExecute="Copy_CanExecute" Executed="Copy_Executed"/>
        <CommandBinding x:Name="Paste" Command="ApplicationCommands.Paste" CanExecute="Paste_CanExecute" Executed="Paste_Executed" />
        <CommandBinding x:Name="Delete" Command="ApplicationCommands.Delete" CanExecute="Delete_CanExecute" Executed="Delete_Executed"/>
    </Page.CommandBindings>
    <Page.Resources>

        <Style x:Key="GreyButton" TargetType="{x:Type Button}">
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
            <Setter Property="Background" Value="#FFD5D5D3"/>
            <!--<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>-->
            <Setter Property="Foreground" Value="#8E686868"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Viewbox>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Viewbox>
                            <Border.CornerRadius>5</Border.CornerRadius>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="White" Focusable="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" MaxHeight="100" MinHeight="20"/>
            <RowDefinition Height="6*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="4*" MinWidth="600"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Button x:Name="homeButton" MaxWidth="50" Grid.Column="0" Style="{DynamicResource DarkButtonWithText}" Width="Auto" Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15" Click="homeButton_Click" MouseEnter="homeButton_MouseEnter" MouseLeave="homeButton_MouseLeave">
            <Image x:Name="homeButtonImage"/>
        </Button>
        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="15" Orientation="Vertical">
            <StackPanel Orientation="Horizontal" MouseEnter="StackPanel_MouseEnter" MouseLeave="StackPanel_MouseLeave">
                <TextBlock Margin="5">Path to folder with decks</TextBlock>
                <TextBox x:Name="pathOfSaveDeck" Style="{DynamicResource TextBoxStyle1}" IsReadOnly="True"  Margin="5" MinWidth="150" HorizontalAlignment="Stretch" Text="{Binding SettingsModel.AbsolutePathOfSaveDeckFolder, Mode=OneWay}"/>
                <Button x:Name="chooseSaveFolder" Style="{DynamicResource DarkButtonWithText}" MaxHeight="25" Margin="5" HorizontalAlignment="Right" Click="chooseSaveFolder_Click" >Choose...</Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <CheckBox x:Name="makeBackupCheckbox" Margin="5" IsChecked="{Binding SettingsModel.MakeBackup, Mode=TwoWay}" Style="{DynamicResource CheckBoxStyle1}"/>
                <TextBlock Margin="5">Make backup at each application opening</TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Margin="5">Path to folder with backups</TextBlock>
                <TextBox x:Name="pathOfBackupDeck" Style="{DynamicResource TextBoxStyle1}" IsReadOnly="True" Margin="5"  MinWidth="150" HorizontalAlignment="Stretch" Text="{Binding SettingsModel.AbsolutePathOfBackupFolder, Mode=OneWay}"/>
                <Button x:Name="chooseBackupFolder" Margin="5" Style="{DynamicResource DarkButtonWithText}" MaxHeight="25" HorizontalAlignment="Right" Click="chooseBackupFolder_Click">Choose...</Button>
            </StackPanel>
            <!--<StackPanel Orientation="Horizontal">
                <CheckBox x:Name="randomReverseCheckbox" Margin="5" IsChecked="{Binding SettingsModel.RandomReverseAtTraining, Mode=TwoWay}"/>
                <TextBlock Margin="5">Обращать карты во время тренировки случайным образом</TextBlock>
            </StackPanel>-->

            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0 15" Orientation="Vertical">
                <ScrollViewer x:Name="trainingTemplatesScrollViewer" Template="{DynamicResource ScrollViewerControlTemplate1}" MaxHeight="180" HorizontalAlignment="Stretch" Height="250" PreviewMouseWheel="trainingTemplatesScrollViewer_PreviewMouseWheel" >
                    <ListView x:Name="trainingTemplatesListView" Style="{DynamicResource ListViewStyle1}" ItemContainerStyle="{DynamicResource ListViewItemStyle1}" ItemsSource="{Binding TrainingTemplates, Mode=OneWay}" Background="#FFD5D5D3">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid VerticalAlignment="Stretch">
                                    <Grid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem x:Name="Copy" Command="ApplicationCommands.Copy"/>
                                            <MenuItem x:Name="Past" Command="ApplicationCommands.Paste"/>
                                            <MenuItem x:Name="Delete" Command="ApplicationCommands.Delete"/>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <CheckBox x:Name="selectionForTraining" Margin="20 20" IsChecked="{Binding TemplateIsSelectedForTraining, Mode=TwoWay}" Style="{DynamicResource CheckBoxStyle1}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="40" MinHeight="40" Width="40" Height="13"/>
                                    <!--<CheckBox x:Name="SelectedAsReversed" IsChecked="{Binding DeckIsSelectedAsReversed, Mode=TwoWay}" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="20" MinHeight="20" Width="20" Height="13"/>-->

                                    <!--<TextBlock Text="{Binding TemplateName}" Grid.Row="0" Grid.Column="1" Margin="10 0"/>-->
                                    <TextBox Text="{Binding TemplateName, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Margin="10" MaxWidth="200" Style="{DynamicResource TextBoxStyle1}" Height="40"/>
                                    <TextBox Text="{Binding MaxCardCount, Mode=TwoWay}" Grid.Row="0" Grid.Column="2" Margin="10" MaxWidth="200" Style="{DynamicResource TextBoxStyle1}" Height="40"/>
                                    <!--<ComboBox x:Name="ReverseSetting" SelectedIndex="{Binding ReverseSettingIndex, Mode=TwoWay}" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="70" MinHeight="20" Width="20" Height="13">
                                        <ComboBoxItem Content="Прямо"/>
                                        <ComboBoxItem Content="Обратно"/>
                                        <ComboBoxItem Content="Случайно"/>
                                        <ComboBoxItem Content="Пользовательский"/>
                                    </ComboBox>-->
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ScrollViewer>
            </StackPanel>
            <Grid x:Name="cardButtons">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="newCardButton" Style="{DynamicResource DarkButtonWithText}" Grid.Column="0" MaxWidth="50" MaxHeight="50" HorizontalAlignment="Right" Margin="5" Click="newCardButton_Click" MouseEnter="newCardButton_MouseEnter" MouseLeave="newCardButton_MouseLeave" >
                    <Image x:Name="newButtonImage"/>
                </Button>
                <Button x:Name="deleteCardButton"  Style="{DynamicResource DarkButtonWithText}" Grid.Column="1" MaxWidth="50" MaxHeight="50" HorizontalAlignment="Left" Margin="5" Click="deleteCardButton_Click" MouseEnter="deleteCardButton_MouseEnter" MouseLeave="deleteCardButton_MouseLeave">
                    <Image x:Name="deleteButtonImage"/>
                </Button>
            </Grid>
        </StackPanel>

        <TextBlock Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="10">© Copiright by Nikita Davydov, 2022; nikita.davidov02@yandex.ru</TextBlock>
    </Grid>
</Page>
